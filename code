                                        #==============================#
                                         Long term outcomes in type 2 MI
                                        #==============================#

                                                Andrew R Chapman
                                            University of Edinburgh
                                             a.r.chapman@ed.ac.uk
                                                   19.05.2017
                                           Updated 15.10.2017

                        R code supplied to provide an overview of key steps in analysis
              Code has been edited for readability and re-ordered as per manuscript and supplement
               Where repeated analysis steps have taken place, only an example is shown for brevity

#Require the following packages
library(tableone)
library(caret)
library(reshape2)
library(tidyr)
library(dplyr)
library(binom)
library(survival)
library(grid)
library(survMisc)
library(scales)
library(foreign)
library(Hmisc)
library(ggplot2)
library(gridExtra)
library(pspline)
library(broom)
library(gtable)
library(MatchIt)
library(sandwich)


###================
### load functions
###================
## qplot_survival function by K Middleton 
## https://github.com/kmiddleton/rexamples/blob/master/qplot_survival.R

# create KM curve

createSurvivalFrame <- function(f.survfit){ 
        # initialise frame variable
        f.frame <- NULL
        
        # check if more then one strata
        if(length(names(f.survfit$strata)) == 0){
                
                # create data.frame with data from survfit
                f.frame <- data.frame(time=f.survfit$time, n.risk=f.survfit$n.risk, n.event=f.survfit$n.event, n.censor = f.survfit $n.censor, surv=f.survfit$surv, upper=f.survfit$upper, lower=f.survfit$lower)
                # create first two rows (start at 1)
                f.start <- data.frame(time=c(0, f.frame$time[1]), n.risk=c(f.survfit$n, f.survfit$n), n.event=c(0,0), n.censor=c(0,0), surv=c(1,1), upper=c(1,1), lower=c(1,1))
                # add first row to dataset
                f.frame <- rbind(f.start, f.frame)
                # remove temporary data
                rm(f.start) 
        }
        else {
                
                # create vector for strata identification
                f.strata <- NULL
                for(f.i in 1:length(f.survfit$strata)){
                        # add vector for one strata according to number of rows of strata
                        f.strata <- c(f.strata, rep(names(f.survfit$strata)[f.i], f.survfit$strata[f.i])) }
                # create data.frame with data from survfit (create column for strata)
                f.frame <- data.frame(time=f.survfit$time, n.risk=f.survfit$n.risk, n.event=f.survfit$n.event, n.censor = f.survfit $n.censor, surv=f.survfit$surv, upper=f.survfit$upper, lower=f.survfit$lower, strata=factor(f.strata))
                # remove temporary data
                rm(f.strata)
                # create first two rows (start at 1) for each strata
                for(f.i in 1:length(f.survfit$strata)){
                        # take only subset for this strata from data
                        f.subset <- subset(f.frame, strata==names(f.survfit$strata)[f.i])
                        # create first two rows (time: 0, time of first event)
                        
                        f.start <- data.frame(time=c(0, f.subset$time[1]), n.risk=rep(f.survfit[f.i]$n, 2), n.event=c(0,0), n.censor=c(0,0), surv=c(1,1), upper=c(1,1), lower=c(1,1), strata=rep(names(f.survfit$strata)[f.i], 2))
                        # add first two rows to dataset
                        f.frame <- rbind(f.start, f.frame)
                        # remove temporary data
                        rm(f.start, f.subset) }
                # reorder data
                f.frame <- f.frame[order(f.frame$strata, f.frame$time), ]
                # rename row.names
                rownames(f.frame) <- NULL }
        # return frame
        return(f.frame) }

# define custom function to draw kaplan-meier curve with ggplot

qplot_survival <- function(f.frame, f.CI="default", f.shape=3){
        # use different plotting commands dependig whether or not strata's are given 
        if("strata" %in% names(f.frame) == FALSE){
                # confidence intervals are drawn if not specified otherwise
                if(f.CI=="default" | f.CI==TRUE ){
                        # create plot with 4 layers (first 3 layers only events, last layer only censored)
                        # hint: censoring data for multiple censoring events at timepoint are overplotted
                        # (unlike in plot.survfit in survival package)
                        ggplot(data=f.frame) + geom_step(aes(x=time, y=1-surv), direction="hv") + geom_step(aes(x=time,y=lower), directions="hv", linetype=2) + geom_step(aes(x=time,y=upper), direction="hv", linetype=2) + geom_point(data=subset(f.frame, n.censor==1), aes(x=time, y=1-surv), shape=f.shape)
                } 
                else {
                        # create plot without confidence intervalls
                        ggplot(data=f.frame) + geom_step(aes(x=time, y=1-surv), direction="hv", size=5) + 
                                geom_point(data=subset(f.frame, n.censor==1), aes(x=time, y=1-surv),size=5, shape=f.shape)
                }
        }
        else {
                if(f.CI=="default" | f.CI==FALSE){
                        
                        # without CI
                        ###ADD LINETYPE=2 -------------------------------------------------------------------------------------------------here
                        ggplot(data=f.frame, aes(group=strata, colour=strata)) + geom_step(aes(x=time, y=1-surv), direction="hv", size=0.75) + geom_point(data=subset(f.frame, n.censor==1), aes(x=time, y=1-surv), shape=f.shape, linetype=2)
                } 
                else {
                        
                        # with CI (hint: use alpha for CI)
                        
                        ggplot(data=f.frame, aes(colour=strata, group=strata)) + geom_step(aes(x=time, y=1-surv), direction="hv") + geom_step(aes(x=time, y=lower), directions="hv", linetype=2, alpha=0.5) + geom_step(aes(x=time,y=upper), direction="hv", linetype=2, alpha=0.5) + geom_point(data=subset(f.frame, n.censor==1), aes(x=time, y=1-surv), shape=f.shape)
                        
                } 
        }
}



##################################################################

# setwd ("~/")
#load master dataframe 
## scrubbing and checking steps omitted ##

dat <- read.spss ("v6longterm.sav", to.data.frame=T, trim.factor.names=T)

#---------------------------------------
##Sorting data for survival analysis 
#---------------------------------------
#report five year survival
dat2$five.year.death <- ifelse(dat2$all.death==1&dat2$days.to.event.or.follow.up<=1826.25,1,0)
dat2$five.year.cv.death <- ifelse(dat2$cv.death==1&dat2$days.to.event.or.follow.up<=1826.25,1,0)
dat2$five.year.non.cv.death <- ifelse(dat2$non.cv.death==1&dat2$days.to.event.or.follow.up<=1826.25,1,0)
dat2$five.year.mi <- ifelse(dat2$recurrent.nonfatal.mi==1&dat2$days.to.mi.death.or.follow.up<=1826.25,1,0)
dat2$five.year.fatalmi <- ifelse(dat2$recurrent.fatal.mi==1&dat2$days.to.mi.death.or.follow.up<=1826.25,1,0)
dat2$five.year.hf <- ifelse(dat3$hf.readmission==1&dat3$days.to.hf.mi.death.or.follow.up<1826.25,1,0)
dat2$five.year.mace <- ifelse(dat2$composite.mi.death==1&dat2$days.to.mi.death.or.follow.up<1826.25,1,0)

#determine patient years for death or last follow up all groups
patient.years.t1 <- (sum(dat2$days.to.event.or.follow.up[dat2$classification==1]))/365.25
patient.years.t2 <- (sum(dat2$days.to.event.or.follow.up[dat2$classification==2]))/365.25
patient.years.injury <- (sum(dat2$days.to.event.or.follow.up[dat2$classification==3]))/365.25
patient.years.t2injury <- (sum(dat2$days.to.event.or.follow.up[dat2$type2.injury==1]))/365.25

#determine patient years for MI/death or last follow up all groups
patient.years.mi.t1 <- (sum(dat2$days.to.mi.death.or.follow.up[dat2$classification==1]))/365.25
patient.years.mi.t2 <- (sum(dat2$days.to.mi.death.or.follow.up[dat2$classification==2]))/365.25
patient.years.mi.injury <- (sum(dat2$days.to.mi.death.or.follow.up[dat2$classification==3]))/365.25
patient.years.mi.t2.injury <- (sum(dat2$days.to.mi.death.or.follow.up[dat2$type2.injury==1]))/365.25

#determine deaths for all groups
all.death.t1 <- (sum(dat2$all.death[dat2$classification==1]))
all.death.t2 <- (sum(dat2$all.death[dat2$classification==2]))
all.death.injury <- (sum(dat2$all.death[dat2$classification==3]))
all.death.t2.injury <- (sum(dat2$all.death[dat2$type2.injury==1]))

#determine CV deaths for all groups
cv.death.t1 <- (sum(dat2$cv.death[dat2$classification==1]))
cv.death.t2 <- (sum(dat2$cv.death[dat2$classification==2]))
cv.death.injury <- (sum(dat2$cv.death[dat2$classification==3]))

#determine nonCV deaths for all groups
non.cv.death.t1 <- (sum(dat2$non.cv.death[dat2$classification==1]))
non.cv.death.t2 <- (sum(dat2$non.cv.death[dat2$classification==2]))
non.cv.death.injury <- (sum(dat2$non.cv.death[dat2$classification==3]))

#determine composite CV or MI for all groups
cv.mi.death.t1 <- (sum(dat2$composite.mi.death[dat2$classification==1]))
cv.mi.death.t2 <- (sum(dat2$composite.mi.death[dat2$classification==2]))
cv.mi.death.injury <- (sum(dat2$composite.mi.death[dat2$classification==3]))

#determine hospitalisation for T1MI for all groups
mi.t1 <- (sum(dat2$recurrent.nonfatal.mi[dat2$classification==1]))
mi.t2 <- (sum(dat2$recurrent.nonfatal.mi[dat2$classification==2]))
mi.injury <- (sum(dat2$recurrent.nonfatal.mi[dat2$classification==3]))
mi.t2.injury <- (sum(dat2$recurrent.nonfatal.mi[dat2$type2.injury==1]))

#determine five year death
t1.all.death <- (sum(dat2$five.year.death[dat2$classification==1]))
t2.all.death <- (sum(dat2$five.year.death[dat2$classification==2]))
injury.all.death <- (sum(dat2$five.year.death[dat2$classification==3]))


t1.all.mi <- (sum(dat2$five.year.mi[dat2$classification==1]))
t2.all.mi <- (sum(dat2$five.year.mi[dat2$classification==2]))
injury.mi <- (sum(dat2$five.year.mi[dat2$classification==3]))

#---------------------------------------
##subset data by classification 
#---------------------------------------

dat.t1 <- subset(dat2, classification==1)
dat.t2 <- subset(dat2, classification==2)
dat.injury <- subset(dat2, classification==3)
dat.t1.t2 <- subset(dat2, classification==1 | classification==2)
dat.t2.injury <- subset(dat2, classification==2 | classification==3)
dat.t1.injury <- subset(dat2, classification==1 | classification==3)
recurrent.mi <- subset(dat2, recurrent.nonfatal.mi==1)


#------------
## 'Landmark' Population (survivors to 30 days)
#------------
landmark.dat2 <- subset(dat2, days.to.event.or.follow.up>30) 

#report five year survival for landmark population
table(landmark.dat2$classification)

table(landmark.dat2$classification, landmark.dat2$five.year.death)
table(landmark.dat2$classification, landmark.dat2$five.year.mace)
table(landmark.dat2$classification, landmark.dat2$five.year.mi)
table(landmark.dat2$classification, landmark.dat2$five.year.cv.death)
table(landmark.dat2$classification, landmark.dat2$five.year.fatalmi)
table(landmark.dat2$classification, landmark.dat2$five.year.hf)
table(landmark.dat2$classification, landmark.dat2$five.year.non.cv.death)


#---------------------------------------
##create tables
#---------------------------------------
#Table one        
dput(names(dat2))

vars <- c("Age","Sex","Smoker", "Exsmoker", "DM", "HTN", "Lipids", "FH", "HxIHD", "HxMI", "HxSTROKE", "HxPVD", "PrevPCI", "PrevCABG", "AASA", "AClop", "ABblock", "AACE", "AStatin", "ANitrate", "ACCB", "ANicor", "AGTNspr", "ADiur", "AWarf", "ARanitidine", "APPI", "Cholesterol", "AdmissionUrea", "AdmissionCr", "Corrected.EGFR", "AdmissionHb", "Grouptroponin")

table <- CreateTableOne(vars=vars, strata=c("classification"), data=dat2, includeNA = FALSE, test = TRUE, testApprox = chisq.test, argsApprox = list(correct = TRUE), testExact = fisher.test)

table <- print(table, quote = FALSE, noSpaces = TRUE, printToggle = FALSE)

#---------------------------------------
#determine median and IQR of troponin
median.iqr.t1 <- quantile(dat.t1$Grouptroponin)
median.iqr.t2 <- quantile(dat.t2$Grouptroponin)
median.iqr.t3 <- quantile(dat.injury$Grouptroponin)

# Log troponin
dat2$Grouptroponin <- log2(dat2$Grouptroponin)


#---------------------------------------
## Relative risk estimates for primary and secondary outcomes [Table 2]
#---------------------------------------

#relative risk estimates – glm, log link, robust error
rr.est <- function(m1,name){
        cov.m1 <- vcovHC(m1, type="HC0")
        std.err <- sqrt(diag(cov.m1))
        r.est <- cbind(Estimate= exp(coef(m1)), "Robust SE" = std.err,
                       "Pr(>|z|)" = 2 * pnorm(abs(coef(m1)/std.err), lower.tail=FALSE),
                       LL = exp(coef(m1) - 1.96 * std.err),
                       UL = exp(coef(m1) + 1.96 * std.err))
        r.est <- cbind(r.est[2,1], r.est[2,4], r.est[2,5])
        r.est <- round(r.est, digits=2)
        r.est <- data.frame(paste(r.est[1,1],"(",r.est[1,2],"-",r.est[1,3],")"))
        rownames(r.est) <- name
        colnames(r.est) <- "RR (95 %CI)"
        print(r.est)
}

# DEATH Index type 2 vs type 1 unadjusted 
RR.t1.t2.death <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.death, data = dat.t1.t2, family=poisson(link=log))
rr.death <- rr.est(RR.t1.t2.death, "T1.T2.Death")

# MACE Index type 2 vs type 1 unadjusted 
RR.t1.t2.mace <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.mace, data = dat.t1.t2, family=poisson(link=log))
rr.mace <- rr.est(RR.t1.t2.mace, "T1.T2.MACE")

# Non-Fatal MI Index type 2 vs type 1 unadjusted 
RR.t1.t2.nfmi <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.mi, data = dat.t1.t2, family=poisson(link=log))
rr.nfmi <- rr.est(RR.t1.t2.nfmi, "T1.T2.NFMI")

# CV Death type 2 vs type 1 unadjusted 
RR.t1.t2.cv.death <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.cv.death, data = dat.t1.t2, family=poisson(link=log))
rr.cvdeath <- rr.est(RR.t1.t2.cv.death, "T1.T2.CVDeath")

# Fatal MI type 2 vs type 1 unadjusted 
RR.t1.t2.fmi <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.fatalmi, data = dat.t1.t2, family=poisson(link=log))
rr.fmi <- rr.est(RR.t1.t2.fmi, "T1.T2.FMI")

# HF type 2 vs type 1 unadjusted 
RR.t1.t2.hf <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.hf, data = dat.t1.t2, family=poisson(link=log))
rr.hf <- rr.est(RR.t1.t2.hf, "T1.T2.HF")

# Non-CV Death type 2 vs type 1 unadjusted 
RR.t1.t2.noncv.death <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.non.cv.death , data = dat.t1.t2, family=poisson(link=log))
rr.noncvdeath <- rr.est(RR.t1.t2.noncv.death, "T1.T2.NonCVDeath")

unadj.rrt1.t2 <- rbind(rr.death,rr.mace,rr.nfmi,rr.cvdeath,rr.fmi,rr.hf,rr.noncvdeath)
unadj.rrt1.t2 

## Relative Risks type 2 versus type 1  adjusted 

# DEATH Index type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.death <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.death + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.death <- rr.est(RR.t1.t2.death, "T1.T2.Death")

# MACE Index type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.mace <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.mace + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.mace <- rr.est(RR.t1.t2.mace, "T1.T2.MACE")

# Non-Fatal MI Index type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.nfmi <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.mi + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.nfmi <- rr.est(RR.t1.t2.nfmi, "T1.T2.NFMI")

# CV Death type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.cv.death <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.cv.death + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.cvdeath <- rr.est(RR.t1.t2.cv.death, "T1.T2.CVDeath")

# Fatal MI type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.fmi <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.fatalmi + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.fmi <- rr.est(RR.t1.t2.fmi, "T1.T2.FMI")

# HF type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.hf <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.hf + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.hf <- rr.est(RR.t1.t2.hf, "T1.T2.HF")

# Non-CV Death type 2 vs type 1 adjusted for age, sex, renal function and co-morbidities
RR.t1.t2.noncv.death <- glm(dat.t1.t2$type2 ~ dat.t1.t2$five.year.non.cv.death + dat.t1.t2$Age + dat.t1.t2$Sex + dat.t1.t2$AdmissionHb + dat.t1.t2$Corrected.EGFR + dat.t1.t2$HTN + dat.t1.t2$HxSTROKE + dat.t1.t2$HxPVD + dat.t1.t2$DM + dat.t1.t2$known.cad +dat.t1.t2$Smoker +dat.t1.t2$cohort, data = dat.t1.t2, family=poisson(link=log))
rr.noncvdeath <- rr.est(RR.t1.t2.noncv.death, "T1.T2.NonCVDeath")

rrt1.t2 <- rbind(rr.death,rr.mace,rr.nfmi,rr.cvdeath,rr.fmi,rr.hf,rr.noncvdeath)
rrt1.t2 

#above repeated for all reported relative risks comparisons 


#---------------------------------------
## All Cause Mortality TYPE 2 AND INJURY vs Type 1  [Table 3]
#---------------------------------------

# unadjusted all cause death type 2/injury Model 1  [ UNADJUSTED MODEL ] 
all.type2injury.cox1 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$all.death)~(dat2$type2.injury))
summary(all.type2injury.cox1)

# adjusted for age, sex type 2/injury
all.type2injury.cox2 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$all.death)~(dat2$type2.injury)+dat2$Age +dat2$Sex)
summary(all.type2injury.cox2)

# adjusted for age, sex and renal function
all.type2injury.cox3 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$all.death)~(dat2$type2.injury)+dat2$Age +dat2$Sex +dat2$Corrected.EGFR)
summary(all.type2injury.cox3)

# adjusted for age, sex, renal function and co-variates [ FULLY ADJUSTED MODEL ] 
all.type2injury.cox4 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$all.death)~dat2$type2.injury+ pspline(dat2$Age) +dat2$Sex +dat2$AdmissionHb +pspline(dat2$Corrected.EGFR) +dat2$Smoker +dat2$DM +dat2$HTN +dat2$known.cad  +dat2$HxSTROKE +dat2$HxPVD +dat2$cohort)
summary(all.type2injury.cox4)
cox4 <- summary(all.type2injury.cox4)

all.cox4 <- melt(exp(coef(all.type2injury.cox4)))
all.cox4 <- cbind(all.cox4, exp(confint(all.type2injury.cox4)))

all.cox4[2,] <- all.cox4[2,]^10
all.cox4[4,] <- (1/all.cox4[4,])^10
all.cox4[5,] <- (1/all.cox4[5,])^10


#---------------------------------------
## csHR MACE (Composite CV and MI) TYPE 2 or INJURY vs Type 1  [Table 3]
#---------------------------------------

#unadjusted
unadjusted.cox4 <- coxph(Surv(dat2$days.to.mi.death.or.follow.up, dat2$composite.mi.death)~(dat2$type2.injury))
summary(unadjusted.cox4)

#age sex
mod2.cox4 <- coxph(Surv(dat2$days.to.mi.death.or.follow.up, dat2$composite.mi.death)~(dat2$type2.injury) +pspline(dat2$Age) +dat2$Sex)
summary(mod2.cox4)
cox.zph(mod2.cox4)

#age sex gfr
mod3.cox4 <- coxph(Surv(dat2$days.to.mi.death.or.follow.up, dat2$composite.mi.death)~(dat2$type2.injury) +pspline(dat2$Age) +dat2$Sex +pspline(dat2$Corrected.EGFR))
summary(mod3.cox4)
cox.zph(mod3.cox4)

#adjusted for age, sex, renal function and co-variates [ FULLY ADJUSTED MODEL ]
all.type2injury.cox4 <- coxph(Surv(dat2$days.to.mi.death.or.follow.up, dat2$composite.mi.death)~(dat2$type2.injury)+ pspline(dat2$Age) +dat2$Sex +dat2$AdmissionHb + pspline(dat2$Corrected.EGFR) +dat2$Smoker +dat2$DM +dat2$HTN +dat2$known.cad  +dat2$HxSTROKE +dat2$HxPVD +dat2$cohort)
summary(all.type2injury.cox4)


#---------------------------------------
## csHR Non-CV Death TYPE 2 AND INJURY vs Type 1
#---------------------------------------
# unadjusted all cause death type 2/injury 
non.cvd.type2injury.cox1 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$non.cv.death)~(dat2$type2.injury))
summary(non.cvd.type2injury.cox1)

# adjusted for age, sex type 2/injury
non.cvd.type2injury.cox2 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$non.cv.death)~(dat2$type2.injury)+pspline(dat2$Age)  +dat2$Sex)
summary(non.cvd.type2injury.cox2)
cox.zph(non.cvd.type2injury.cox2)

# adjusted for age, sex and renal function
non.cvd.type2injury.cox3 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$non.cv.death)~(dat2$type2.injury)+pspline(dat2$Age) +dat2$Sex +pspline(dat2$Corrected.EGFR)) 
summary(non.cvd.type2injury.cox3)
cox.zph(non.cvd.type2injury.cox3)

# adjusted for age, sex, renal function and co-variates [ FULLY ADJUSTED MODEL ]
non.cvd.type2injury.cox4 <- coxph(Surv(dat2$days.to.event.or.follow.up, dat2$non.cv.death)~(dat2$type2.injury)+pspline(dat2$Age) +dat2$Sex +pspline(dat2$AdmissionHb) +pspline(dat2$Corrected.EGFR) +dat2$Smoker +dat2$DM +dat2$HTN +dat2$known.cad  +dat2$HxSTROKE +dat2$HxPVD +dat2$cohort)
summary(non.cvd.type2injury.cox4)
cox.zph(non.cvd.type2injury.cox4)


#---------------------------------------
## Figure 1 - KM plots for all cause mortality by classification
#---------------------------------------

data=dat2

d <- dat2[, c(7,8,2)]
names(d) <- c("days", "event", "group")

fit <- survfit(Surv(days,event)~group, data=d)
diff <- survdiff(Surv(days,event)~group, data=d)

risksets <- with(na.omit(d[, Cs(days, event, group)]), table(group, cut(days, seq(0, 2920, by=100) ) ))
number.at.risk <- sapply(1:nrow(risksets), function(i) Reduce("-",  risksets[i,], init=rowSums(risksets)[i], accumulate=TRUE))
number.at.risk <- data.frame(number.at.risk)
names(number.at.risk) <- c("Type 1 MI", "Type 2 MI", "Myocardial Injury")
number.at.risk

number.at.risk = number.at.risk[1:6,]
df_nums = melt(number.at.risk)
df_nums$year = 1:6
tbl.1 = ggplot(df_nums, aes(x = year, y = factor(variable,levels=rev(levels(variable))), colour = variable,label=value)) +
        geom_text(size = 3.5) + theme(panel.grid.major = element_blank(), legend.position = "none") +      theme_bw() + 
        theme(
                plot.background = element_blank(), 
                panel.grid.major = element_blank(),
                panel.grid.minor = element_blank(),
                panel.border = element_blank(),
                legend.position="none",
                axis.line = element_blank(),
                axis.text.x = element_blank(),
                axis.ticks=element_blank(),
                axis.title.x = element_blank(),
                axis.title.y = element_blank(),
                plot.title = element_blank()
        ) + scale_y_discrete(breaks=c("Type 1 MI", "Type 2 MI","Myocardial Injury"), labels=c("Type 1 MI","Type 2 MI", "Myocardial Injury"))

tbl.1 <- tbl.1 + coord_fixed(ratio = 0.2)

dev.new()
pdf("Fig.1.atrisk.#pdf")
print(tbl.1)
dev.off()

p.value <- round(1 - pchisq(diff$chisq, 1), digits=3)
p.value <- ifelse(p.value < 0.001, "<0.001", paste("= ", p.value))

t.Surv1 <- Surv(time=dat2$days.to.event.or.follow.up , event=dat2$all.death)
t.survfit1 <- survfit(t.Surv1~classification, dat2)
q.f <- plot(t.survfit1, mark.time=TRUE)

t.survframe1 <-createSurvivalFrame(t.survfit1)

t <- qplot_survival(t.survframe1,f.CI=F) +
        ylab("Cumulative incidence of death from any cause (%) \n")+coord_cartesian(ylim = c(0,1))+scale_x_continuous(expand=c(0,0),limits=c(0,1825),breaks=seq(0,1825,365),labels=c(0, 1, 2, 3, 4, 5))+xlab("\n Time (Years)")+theme_bw()+
        scale_y_continuous(expand=c(0,0),labels=percent,breaks=c(0,0.2,0.4,0.6,0.8,1))+#theme(legend.position="right") +
        scale_color_manual("\n",labels = c("Myocardial Injury", "Type 2 MI", "Type 1 MI"), values=c("#619CFF","#00BA38","#F8766D")) +
        theme(
                axis.text.x = element_text(size=20,hjust=.5,vjust=.8,face="bold",colour="black"),
                axis.text.y = element_text(size=20,hjust=.5,vjust=.8,face="bold",colour="black"),
                axis.title.x = element_text(size=20,face="bold"),
                axis.title.y = element_text(size=20,face="bold"),
                plot.title = element_text(size=14,face="bold"))

par(mar=c(1,1,1,1))

t <- t +  annotate("text", x = 1400, y = 0.1, size=7, label = paste("P ", p.value, "by log-rank test", collapse="")) 
t 

dev.new()
pdf("Fig.1.pdf", height=10, width=12)
print(t)
dev.off()

#---------------------------------------
## Figure 2 / MACE vs Non-CV death
#---------------------------------------
library(cmprsk)
library(timereg)

dat4 <- dat2
dat4 <- dat4[,c(1:9,11,21,84)]

dat4$status <- ifelse(dat4$composite.mi.death==1,1,
                      ifelse(dat4$non.cv.death==1,2,0))

d <- cuminc(dat4$days.to.mi.death.or.follow.up, dat4$status, dat4$classification, cencode=0)

#facet plot MACE on one plot 

d1 <- data.frame (d$`1 1`$time, d$`1 1`$est)
d1$classification <- 1
names(d1) <- c("Time", "Event", "Classification")
d2 <- data.frame (d$`2 1`$time, d$`2 1`$est)
d2$classification <- 2
names(d2) <- c("Time", "Event", "Classification")
d3 <- data.frame (d$`3 1`$time, d$`3 1`$est)
d3$classification <- 3
names(d3) <- c("Time", "Event", "Classification")
d4 <- data.frame (d$`1 2`$time, d$`1 2`$est)
d4$classification <- 4
names(d4) <- c("Time", "Event", "Classification")
d5 <- data.frame (d$`2 2`$time, d$`2 2`$est)
d5$classification <- 5
names(d5) <- c("Time", "Event", "Classification")
d6 <- data.frame (d$`3 2`$time, d$`3 2`$est)
d6$classification <- 6
names(d6) <- c("Time", "Event", "Classification")

d.all <- rbind(d1,d2,d3,d4,d5,d6)
d.all$Classification <- factor(d.all$Classification)
d.all$group2 <- ifelse((d.all$Classification==1|d.all$Classification==2|d.all$Classification==3),"Major Adverse Cardiovascular Events","Non-Cardiovascular Death")

#CumINC plot for all
g <- ggplot() + 
        geom_line(aes(Time, Event, colour=d.all$Classification, group=d.all$Classification, linetype=d.all$Classification),size=0.75, d.all) + 
        scale_linetype_manual(name="Groups",values=c(1,1,1,8,8,8),labels=c("Type 1 - MACE","Type 2 - MACE", "Injury - MACE", "Type 1 - Non-CV Death", "Type 2 - Non-CV Death", "Injury - Non-CV Death"))+
        ylab("Cumulative incidence of event (%) \n")+coord_cartesian(ylim = c(0,0.5))+scale_x_continuous(expand=c(0,0),limits=c(0,1825),breaks=seq(0,1825,365),labels=c(0, 1, 2, 3, 4, 5))+xlab("\n Time (Years)")+theme_bw()+
        scale_y_continuous(expand=c(0,0),labels=percent,breaks=c(0,0.1,0.2,0.3,0.4,0.5))+theme(legend.position="none") +
        scale_color_manual(name="Groups",labels=c("Type 1 - MACE","Type 2 - MACE", "Injury - MACE", "Type 1 - Non-CV Death", "Type 2 - Non-CV Death", "Injury - Non-CV Death"),values=c("#F8766D","#00BA38","#619CFF","#F8766D","#00BA38","#619CFF")) +
        theme(
                axis.text.x = element_text(size=20,hjust=.5,vjust=.8,face="bold",colour="black"),
                axis.text.y = element_text(size=20,hjust=.5,vjust=.8,face="bold",colour="black"),
                axis.title.x = element_text(size=20,face="bold"),
                axis.title.y = element_text(size=20,face="bold"),
                plot.title = element_text(size=14,face="bold"))


par(mar=c(1,1,1,1))
g

g <- g + facet_grid(. ~ group2) 
g <- g + theme(panel.spacing = unit(2, "lines"),strip.text.x = element_text(size = 24))
g

dev.new()
pdf("cuminc.pdf",height=10,width=21)
print(g)
dev.off()

#---------------------------------------
## Figure 3 / MACE vs Non-CV death in Landmark population stratified by CAD 
#---------------------------------------

landmark.dat2$status <- ifelse(landmark.dat2$composite.mi.death==1,1,
                               ifelse(landmark.dat2$non.cv.death==1,2,0))

landmark.dat2$group <- ifelse(landmark.dat2$classification==1,3,
                              ifelse(landmark.dat2$type2.injury==1&landmark.dat2$known.cad==1,1,2))

f <- cuminc(landmark.dat2$days.to.mi.death.or.follow.up, landmark.dat2$status, landmark.dat2$group, cencode=0)

f1 <- data.frame (f$`1 1`$time, f$`1 1`$est)
f1$classification <- 1
names(f1) <- c("Time", "Event", "Classification")
f2 <- data.frame (f$`2 1`$time, f$`2 1`$est)
f2$classification <- 2
names(f2) <- c("Time", "Event", "Classification")
f3 <- data.frame (f$`3 1`$time, f$`3 1`$est)
f3$classification <- 3
names(f3) <- c("Time", "Event", "Classification")
f4 <- data.frame (f$`1 2`$time, f$`1 2`$est)
f4$classification <- 4
names(f4) <- c("Time", "Event", "Classification")
f5 <- data.frame (f$`2 2`$time, f$`2 2`$est)
f5$classification <- 5
names(f5) <- c("Time", "Event", "Classification")
f6 <- data.frame (f$`3 2`$time, f$`3 2`$est)
f6$classification <- 6
names(f6) <- c("Time", "Event", "Classification")

f.all <- rbind(f1,f2,f3,f4,f5,f6)

f.all$Classification <- factor(f.all$Classification)

f.all$group2 <- ifelse((f.all$Classification==1|f.all$Classification==2|f.all$Classification==3),"Major Adverse Cardiovascular Events","Non-Cardiovascular Death")

h <- ggplot() + 
        geom_line(aes(Time, Event, colour=f.all$Classification, group=f.all$Classification, linetype=f.all$Classification), size=0.75, f.all) +
        scale_linetype_manual(name="Groups\n",labels=c("Known CAD \nType 2 MI/Injury \n", "No Known CAD \nType 2 MI/Injury \n", "Type 1 MI","Known CAD \nType 2 MI/Injury \n", "No Known CAD \nType 2 MI/Injury \n", "Type 1 MI"),breaks=c(1,2,3,4,5,6),values=c(1,1,1,8,8,8))+
        ylab("Cumulative incidence of event (%) \n")+coord_cartesian(ylim = c(0,0.5))+
        scale_x_continuous(expand=c(0,0),limits=c(0,1825),breaks=seq(0,1825,365),labels=c(0, 1, 2, 3, 4, 5))+xlab("\n Time (Years)")+theme_bw()+
        scale_y_continuous(expand=c(0,0),labels=percent,breaks=c(0,0.1,0.2,0.3,0.4,0.5))+theme(legend.position="none") +
        scale_color_manual("Groups\n",labels = c("Known CAD \nType 2 MI/Injury \n", "No Known CAD \nType 2 MI/Injury \n", "Type 1 MI","Known CAD \nType 2 MI/Injury \n", "No Known CAD \nType 2 MI/Injury \n", "Type 1 MI"), breaks=c(1,2,3,4,5,6), values=c("#F8766D","#00BA38","orange","#F8766D","#00BA38","orange")) +
        theme(
                axis.text.x = element_text(size=20,hjust=.5,vjust=.8,face="bold",colour="black"),
                axis.text.y = element_text(size=20,hjust=.5,vjust=.8,face="bold",colour="black"),
                axis.title.x = element_text(size=20,face="bold"),
                axis.title.y = element_text(size=20,face="bold"),
                plot.title = element_text(size=14,face="bold"))


par(mar=c(1,1,1,1))

h <- h + facet_grid(. ~ group2) 
h <- h + theme(panel.spacing = unit(2, "lines"),strip.text.x = element_text(size = 24))
h

#---------------------------------------
## Table 4 - Prescriptions at discharge 
#---------------------------------------

vars <- c("DASA", "DClop", "DBblock", "DACE", "DStatin", 
          "DNitrate", "DGTNspr", "DCCB", "DWarf")

landmark.dat2$group.cad <- ifelse(landmark.dat2$type1==1,1,
                                  ifelse(landmark.dat2$type2.injury==1&landmark.dat2$known.cad==1,2,3))

table <- CreateTableOne(vars=vars, strata=c("group.cad"), data=landmark.dat2, includeNA = FALSE, test = TRUE, testApprox = chisq.test, argsApprox = list(correct = TRUE), testExact = fisher.test)

table <- print(table, quote = FALSE, noSpaces = TRUE, printToggle = FALSE)


#===============
# Supplementary Table 5 - Cox regression model for MACE in Type 2 and Injury 
#===============

#restrict to those without inhospital death 
landmark.dat.t2.injury <- subset(dat.t2.injury, days.to.event.or.follow.up>30) 

#calculate 5 year MACE rate in those without inhospital death 
landmark.dat.t2.injury$five.year.mace <- ifelse(landmark.dat.t2.injury$composite.mi.death==1&landmark.dat.t2.injury$days.to.mi.death.or.follow.up<=1826.25,1,0)

#cox regression for CAD vs NO CAD
all.type2injury.cox8 <- coxph(Surv(landmark.dat.t2.injury$days.to.mi.death.or.follow.up, landmark.dat.t2.injury$composite.mi.death)~(landmark.dat.t2.injury$known.cad) +landmark.dat.t2.injury$Age +landmark.dat.t2.injury$Sex +landmark.dat.t2.injury$AdmissionHb  +landmark.dat.t2.injury$Corrected.EGFR +landmark.dat.t2.injury$Smoker +landmark.dat.t2.injury$DM +landmark.dat.t2.injury$HTN +landmark.dat.t2.injury$HxSTROKE +landmark.dat.t2.injury$HxPVD +landmark.dat.t2.injury$cohort)
summary(all.type2injury.cox8)

cad.cox <- melt(exp(coef(all.type2injury.cox8)))
cad.cox <- cbind(cad.cox, exp(confint(all.type2injury.cox8)))

#to give HR per 10 fold increase etc
cad.cox <- as.data.frame(cad.cox)

cad.cox[2,] <- cad.cox[2,]^10
cad.cox[4,] <- (1/cad.cox[4,])^10
cad.cox[5,] <- (1/cad.cox[5,])^10


